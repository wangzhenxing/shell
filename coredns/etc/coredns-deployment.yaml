# by www.bejson.com 
kind: ReplicaSet
apiVersion: extensions/v1beta1
metadata:
  name: coredns1-557ccf49
  namespace: kube-system
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/replicasets/coredns1-557ccf49
  uid: faa46388-d36e-11e8-964e-00163e022ae3
  resourceVersion: '369440'
  generation: 1
  creationTimestamp: '2018-10-19T07:17:03Z'
  labels: {k8s-app: coredns1, pod-template-hash: 557ccf49}
  annotations: {deployment.kubernetes.io/desired-replicas: '2', deployment.kubernetes.io/max-replicas: '3',
    deployment.kubernetes.io/revision: '1'}
  ownerReferences:
  - {apiVersion: apps/v1, kind: Deployment, name: coredns1, uid: faa36974-d36e-11e8-b603-00163e06e1f3,
    controller: true, blockOwnerDeletion: true}
spec:
  replicas: 2
  selector:
    matchLabels: {k8s-app: coredns1, pod-template-hash: 557ccf49}
  template:
    metadata:
      creationTimestamp: !!net.sf.json.JSONNull {}
      labels: {k8s-app: coredns1, pod-template-hash: 557ccf49}
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: coredns1
          items:
          - {key: Corefile, path: Corefile}
          defaultMode: 420
      containers:
      - name: coredns1
        image: cloudsky23/coredns:1.2.3
        args: [-conf, /etc/coredns/Corefile]
        ports:
        - {name: dns, containerPort: 53, protocol: UDP}
        - {name: dns-tcp, containerPort: 53, protocol: TCP}
        resources:
          limits: {memory: 170Mi}
          requests: {cpu: 100m, memory: 70Mi}
        volumeMounts:
        - {name: config-volume, readOnly: true, mountPath: /etc/coredns}
        livenessProbe:
          httpGet: {path: /health, port: 8080, scheme: HTTP}
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: Default
      serviceAccountName: coredns1
      serviceAccount: coredns1
      securityContext: {}
      schedulerName: default-scheduler
      tolerations:
      - {key: node-role.kubernetes.io/master, effect: NoSchedule}
      - {key: CriticalAddonsOnly, operator: Exists}
status: {replicas: 2, fullyLabeledReplicas: 2, readyReplicas: 2, availableReplicas: 2,
  observedGeneration: 1}
